/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.qutoutiao.dataplatform.model;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PB2Avro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8790906188888746905L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PB2Avro\",\"namespace\":\"net.qutoutiao.dataplatform.model\",\"fields\":[{\"name\":\"log_timestamp\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"field\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"Field\",\"fields\":[{\"name\":\"int_type\",\"type\":[\"int\",\"null\"],\"default\":null},{\"name\":\"long_type\",\"type\":[\"long\",\"null\"],\"default\":null},{\"name\":\"float_type\",\"type\":[\"float\",\"null\"],\"default\":null},{\"name\":\"string_type\",\"type\":[\"string\",\"null\"],\"default\":null}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PB2Avro> ENCODER =
      new BinaryMessageEncoder<PB2Avro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PB2Avro> DECODER =
      new BinaryMessageDecoder<PB2Avro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<PB2Avro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<PB2Avro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PB2Avro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this PB2Avro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a PB2Avro from a ByteBuffer. */
  public static PB2Avro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long log_timestamp;
  @Deprecated public CharSequence ip;
  @Deprecated public java.util.Map<CharSequence, Field> field;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PB2Avro() {}

  /**
   * All-args constructor.
   * @param log_timestamp The new value for log_timestamp
   * @param ip The new value for ip
   * @param field The new value for field
   */
  public PB2Avro(Long log_timestamp, CharSequence ip, java.util.Map<CharSequence, Field> field) {
    this.log_timestamp = log_timestamp;
    this.ip = ip;
    this.field = field;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return log_timestamp;
    case 1: return ip;
    case 2: return field;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: log_timestamp = (Long)value$; break;
    case 1: ip = (CharSequence)value$; break;
    case 2: field = (java.util.Map<CharSequence, Field>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'log_timestamp' field.
   * @return The value of the 'log_timestamp' field.
   */
  public Long getLogTimestamp() {
    return log_timestamp;
  }

  /**
   * Sets the value of the 'log_timestamp' field.
   * @param value the value to set.
   */
  public void setLogTimestamp(Long value) {
    this.log_timestamp = value;
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public CharSequence getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(CharSequence value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'field' field.
   * @return The value of the 'field' field.
   */
  public java.util.Map<CharSequence, Field> getField() {
    return field;
  }

  /**
   * Sets the value of the 'field' field.
   * @param value the value to set.
   */
  public void setField(java.util.Map<CharSequence, Field> value) {
    this.field = value;
  }

  /**
   * Creates a new PB2Avro RecordBuilder.
   * @return A new PB2Avro RecordBuilder
   */
  public static net.qutoutiao.dataplatform.model.PB2Avro.Builder newBuilder() {
    return new net.qutoutiao.dataplatform.model.PB2Avro.Builder();
  }

  /**
   * Creates a new PB2Avro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PB2Avro RecordBuilder
   */
  public static net.qutoutiao.dataplatform.model.PB2Avro.Builder newBuilder(net.qutoutiao.dataplatform.model.PB2Avro.Builder other) {
    return new net.qutoutiao.dataplatform.model.PB2Avro.Builder(other);
  }

  /**
   * Creates a new PB2Avro RecordBuilder by copying an existing PB2Avro instance.
   * @param other The existing instance to copy.
   * @return A new PB2Avro RecordBuilder
   */
  public static net.qutoutiao.dataplatform.model.PB2Avro.Builder newBuilder(net.qutoutiao.dataplatform.model.PB2Avro other) {
    return new net.qutoutiao.dataplatform.model.PB2Avro.Builder(other);
  }

  /**
   * RecordBuilder for PB2Avro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PB2Avro>
    implements org.apache.avro.data.RecordBuilder<PB2Avro> {

    private long log_timestamp;
    private CharSequence ip;
    private java.util.Map<CharSequence, Field> field;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.qutoutiao.dataplatform.model.PB2Avro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.log_timestamp)) {
        this.log_timestamp = data().deepCopy(fields()[0].schema(), other.log_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ip)) {
        this.ip = data().deepCopy(fields()[1].schema(), other.ip);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.field)) {
        this.field = data().deepCopy(fields()[2].schema(), other.field);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing PB2Avro instance
     * @param other The existing instance to copy.
     */
    private Builder(net.qutoutiao.dataplatform.model.PB2Avro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.log_timestamp)) {
        this.log_timestamp = data().deepCopy(fields()[0].schema(), other.log_timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ip)) {
        this.ip = data().deepCopy(fields()[1].schema(), other.ip);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.field)) {
        this.field = data().deepCopy(fields()[2].schema(), other.field);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'log_timestamp' field.
      * @return The value.
      */
    public Long getLogTimestamp() {
      return log_timestamp;
    }

    /**
      * Sets the value of the 'log_timestamp' field.
      * @param value The value of 'log_timestamp'.
      * @return This builder.
      */
    public net.qutoutiao.dataplatform.model.PB2Avro.Builder setLogTimestamp(long value) {
      validate(fields()[0], value);
      this.log_timestamp = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'log_timestamp' field has been set.
      * @return True if the 'log_timestamp' field has been set, false otherwise.
      */
    public boolean hasLogTimestamp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'log_timestamp' field.
      * @return This builder.
      */
    public net.qutoutiao.dataplatform.model.PB2Avro.Builder clearLogTimestamp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ip' field.
      * @return The value.
      */
    public CharSequence getIp() {
      return ip;
    }

    /**
      * Sets the value of the 'ip' field.
      * @param value The value of 'ip'.
      * @return This builder.
      */
    public net.qutoutiao.dataplatform.model.PB2Avro.Builder setIp(CharSequence value) {
      validate(fields()[1], value);
      this.ip = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ip' field has been set.
      * @return True if the 'ip' field has been set, false otherwise.
      */
    public boolean hasIp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ip' field.
      * @return This builder.
      */
    public net.qutoutiao.dataplatform.model.PB2Avro.Builder clearIp() {
      ip = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'field' field.
      * @return The value.
      */
    public java.util.Map<CharSequence, Field> getField() {
      return field;
    }

    /**
      * Sets the value of the 'field' field.
      * @param value The value of 'field'.
      * @return This builder.
      */
    public net.qutoutiao.dataplatform.model.PB2Avro.Builder setField(java.util.Map<CharSequence, Field> value) {
      validate(fields()[2], value);
      this.field = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'field' field has been set.
      * @return True if the 'field' field has been set, false otherwise.
      */
    public boolean hasField() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'field' field.
      * @return This builder.
      */
    public net.qutoutiao.dataplatform.model.PB2Avro.Builder clearField() {
      field = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PB2Avro build() {
      try {
        PB2Avro record = new PB2Avro();
        record.log_timestamp = fieldSetFlags()[0] ? this.log_timestamp : (Long) defaultValue(fields()[0]);
        record.ip = fieldSetFlags()[1] ? this.ip : (CharSequence) defaultValue(fields()[1]);
        record.field = fieldSetFlags()[2] ? this.field : (java.util.Map<CharSequence, Field>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PB2Avro>
    WRITER$ = (org.apache.avro.io.DatumWriter<PB2Avro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PB2Avro>
    READER$ = (org.apache.avro.io.DatumReader<PB2Avro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
